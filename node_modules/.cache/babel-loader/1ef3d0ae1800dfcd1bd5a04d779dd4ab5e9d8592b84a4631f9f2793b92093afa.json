{"ast":null,"code":"var _jsxFileName = \"/Users/nephthalisalam/Documents/C3training/scripts/c3weather/src/components/TimeAndDate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeAndDate = () => {\n  _s();\n  let monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const [minutes, setMinutes] = useState(currentMinutes);\n  const [seconds, setSeconds] = useState(currentSeconds);\n  const [currentDate, setCurrentDate] = useState('');\n\n  // Manage date and time.\n  let fullDate = new Date();\n  const time = fullDate.toLocaleTimeString({\n    hour: 'numeric',\n    hour12: false,\n    minute: 'numeric'\n  });\n  let currentMinutes = fullDate.getMinutes();\n  let currentSeconds = fullDate.getSeconds();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSeconds(seconds => seconds + 1);\n      setMinutes(minutes => minutes + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  });\n  useEffect(() => {\n    let date = new Date().getDate(); //Current Date\n    let month = monthNames[new Date().getMonth()]; //Current Month\n    let day = dayNames[new Date().getDay()]; //Current day\n    setCurrentDate(`${day} | ${month} ${date}`);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-and-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date\",\n      children: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(TimeAndDate, \"oc66LOX0hcT3G6IND6W8qtqpEto=\");\n_c = TimeAndDate;\nexport default TimeAndDate;\nvar _c;\n$RefreshReg$(_c, \"TimeAndDate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TimeAndDate","_s","monthNames","dayNames","minutes","setMinutes","currentMinutes","seconds","setSeconds","currentSeconds","currentDate","setCurrentDate","fullDate","Date","time","toLocaleTimeString","hour","hour12","minute","getMinutes","getSeconds","timer","setTimeout","clearInterval","date","getDate","month","getMonth","day","getDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nephthalisalam/Documents/C3training/scripts/c3weather/src/components/TimeAndDate.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport '../App.css'\n\n\nconst TimeAndDate = () => {\n\n    let monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December']\n    let dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n        'Saturday']\n\n    const [minutes, setMinutes] = useState(currentMinutes)\n    const [seconds, setSeconds] = useState(currentSeconds)\n    const [currentDate, setCurrentDate] = useState('')\n\n    // Manage date and time.\n    let fullDate = new Date()\n\n    const time = fullDate.toLocaleTimeString({ hour: 'numeric', hour12: false, minute: 'numeric' })\n    let currentMinutes = fullDate.getMinutes()\n    let currentSeconds = fullDate.getSeconds()\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setSeconds((seconds) => seconds + 1)\n            setMinutes((minutes) => minutes + 1)\n        }, 1000)\n        return () => {\n            clearInterval(timer)\n        }\n    })\n\n    useEffect(() => {\n        let date = new Date().getDate() //Current Date\n        let month = monthNames[new Date().getMonth()] //Current Month\n        let day = dayNames[new Date().getDay()]//Current day\n        setCurrentDate(`${day} | ${month} ${date}`)\n    }, [])\n\n\n    return (\n        <div className='time-and-date'>\n            <div className='time'>\n                {time}\n            </div>\n            <div className='date'>\n                {currentDate}\n            </div>\n        </div>\n    )\n}\n\nexport default TimeAndDate\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,IAAIC,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACpE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EACrE,IAAIC,QAAQ,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAC5E,UAAU,CAAC;EAEf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACU,cAAc,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACa,cAAc,CAAC;EACtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,IAAIgB,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC;EAEzB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,kBAAkB,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAU,CAAC,CAAC;EAC/F,IAAIZ,cAAc,GAAGM,QAAQ,CAACO,UAAU,CAAC,CAAC;EAC1C,IAAIV,cAAc,GAAGG,QAAQ,CAACQ,UAAU,CAAC,CAAC;EAG1CvB,SAAS,CAAC,MAAM;IACZ,MAAMwB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC3Bd,UAAU,CAAED,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;MACpCF,UAAU,CAAED,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACTmB,aAAa,CAACF,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACZ,IAAI2B,IAAI,GAAG,IAAIX,IAAI,CAAC,CAAC,CAACY,OAAO,CAAC,CAAC,EAAC;IAChC,IAAIC,KAAK,GAAGxB,UAAU,CAAC,IAAIW,IAAI,CAAC,CAAC,CAACc,QAAQ,CAAC,CAAC,CAAC,EAAC;IAC9C,IAAIC,GAAG,GAAGzB,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAACgB,MAAM,CAAC,CAAC,CAAC;IACvClB,cAAc,CAAE,GAAEiB,GAAI,MAAKF,KAAM,IAAGF,IAAK,EAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIzB,OAAA;IAAK+B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BhC,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBjB;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNpC,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBrB;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAlC,EAAA,CA/CKD,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAiDjB,eAAeA,WAAW;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}